<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Complete Your Profile - Financial AI Hub</title>
    <link rel="manifest" href="/manifest.json">
    <meta name="theme-color" content="#667eea">
    <link rel="apple-touch-icon" href="/icons/icon-192x192.png">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            overflow-x: hidden;
            color: #2d3748;
        }

        .header {
            background: rgba(255, 255, 255, 0.15);
            backdrop-filter: blur(20px);
            border-bottom: 1px solid rgba(255, 255, 255, 0.2);
            padding: 1rem 2rem;
            position: sticky;
            top: 0;
            z-index: 100;
            transition: all 0.3s ease;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            animation: slideDown 0.5s ease forwards;
        }

        .header-content {
            max-width: 1400px;
            margin: 0 auto;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .logo {
            font-size: 1.8rem;
            font-weight: 700;
            color: white;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            text-decoration: none;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
            transition: all 0.3s ease;
        }

        .logo:hover {
            transform: translateY(-2px);
            text-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }

        .user-section {
            display: flex;
            align-items: center;
            gap: 1.5rem;
        }

        .welcome-text {
            color: white;
            font-weight: 600;
            font-size: 1.15rem;
            text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);
        }

        .logout-btn {
            background: rgba(255, 255, 255, 0.15);
            color: white;
            border: 1px solid rgba(255, 255, 255, 0.25);
            padding: 0.6rem 1.2rem;
            border-radius: 25px;
            text-decoration: none;
            font-weight: 500;
            transition: all 0.3s ease;
            backdrop-filter: blur(10px);
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .logout-btn:hover {
            background: rgba(255, 255, 255, 0.25);
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }

        .container {
            max-width: 800px;
            margin: 2rem auto;
            padding: 0 2rem;
            animation: fadeIn 0.8s ease forwards;
        }

        .progress-header {
            text-align: center;
            margin-bottom: 2rem;
            color: white;
        }

        .progress-header h1 {
            font-size: 2rem;
            margin-bottom: 1rem;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
            background: linear-gradient(135deg, #fff, #e2e8f0);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .progress-header p {
            font-size: 1.1rem;
            opacity: 0.9;
            margin-bottom: 1.5rem;
            line-height: 1.6;
        }

        .progress-container {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 20px;
            padding: 1.5rem;
            margin-bottom: 2rem;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        }

        .progress-bar {
            background: rgba(255, 255, 255, 0.2);
            height: 8px;
            border-radius: 4px;
            overflow: hidden;
            margin-bottom: 1rem;
        }

        .progress-fill {
            background: linear-gradient(90deg, #4CAF50, #8BC34A);
            height: 100%;
            border-radius: 4px;
            transition: width 0.5s ease;
            width: 0%;
            box-shadow: 0 2px 4px rgba(76, 175, 80, 0.3);
        }

        .progress-text {
            color: white;
            text-align: center;
            font-weight: 500;
            font-size: 1.1rem;
            text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
        }

        .card-container {
            perspective: 1000px;
            height: 600px;
            position: relative;
            margin-bottom: 2rem;
        }

        .card {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            padding: 3rem 2rem;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.2);
            position: absolute;
            width: 100%;
            height: 100%;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            text-align: center;
            transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
            backdrop-filter: blur(20px);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .card.slide-out-left {
            transform: translateX(-100%);
            opacity: 0;
        }

        .card.slide-out-right {
            transform: translateX(100%);
            opacity: 0;
        }

        .card.slide-in {
            transform: translateX(0);
            opacity: 1;
        }

        .card.hidden {
            display: none;
        }

        .card-icon {
            font-size: 3.5rem;
            color: #667eea;
            margin-bottom: 2rem;
            background: linear-gradient(135deg, #667eea, #764ba2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .card h2 {
            color: #2d3748;
            font-size: 2rem;
            margin-bottom: 1.5rem;
            font-weight: 700;
        }

        .card p {
            color: #4a5568;
            font-size: 1.2rem;
            margin-bottom: 2.5rem;
            line-height: 1.7;
            max-width: 600px;
        }

        .input-group {
            width: 100%;
            max-width: 500px;
            margin-bottom: 2rem;
        }

        .input-field {
            width: 100%;
            padding: 1.2rem 1.5rem;
            border: 2px solid #e2e8f0;
            border-radius: 15px;
            font-size: 1.1rem;
            outline: none;
            transition: all 0.3s ease;
            background: white;
            color: #2d3748;
        }

        .input-field:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .option-buttons {
            display: flex;
            gap: 1rem;
            flex-wrap: wrap;
            justify-content: center;
            margin-top: 1rem;
        }

        .option-btn {
            background: white;
            border: 2px solid #e2e8f0;
            padding: 1rem 2rem;
            border-radius: 15px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 1.1rem;
            min-width: 150px;
            color: #2d3748;
            font-weight: 500;
        }

        .option-btn:hover {
            background: #667eea;
            color: white;
            border-color: #667eea;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.3);
        }

        .option-btn.selected {
            background: #667eea;
            color: white;
            border-color: #667eea;
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.3);
        }

        .navigation-buttons {
            display: flex;
            justify-content: space-between;
            margin-top: 2rem;
            gap: 1rem;
        }

        .nav-btn {
            padding: 1rem 2rem;
            border-radius: 15px;
            font-size: 1.1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            min-width: 150px;
            justify-content: center;
        }

        .prev-btn {
            background: white;
            color: #2d3748;
            border: 2px solid #e2e8f0;
        }

        .prev-btn:hover {
            background: #f7fafc;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

        .next-btn {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            border: none;
        }

        .next-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
        }

        .next-btn:disabled {
            opacity: 0.7;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }

        .error-message {
            background: #fed7d7;
            color: #742a2a;
            padding: 1rem;
            border-radius: 10px;
            margin-top: 1rem;
            display: none;
        }

        @keyframes slideDown {
            from {
                transform: translateY(-100%);
                opacity: 0;
            }
            to {
                transform: translateY(0);
                opacity: 1;
            }
        }

        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        @media (max-width: 768px) {
            .header {
                padding: 1rem;
            }

            .header-content {
                flex-direction: column;
                gap: 1rem;
            }

            .user-section {
                flex-direction: column;
                gap: 1rem;
            }

            .welcome-text {
                text-align: center;
            }

            .container {
                padding: 1rem;
            }

            .card {
                padding: 2rem 1rem;
            }

            .card h2 {
                font-size: 1.5rem;
            }

            .card p {
                font-size: 1rem;
            }

            .option-buttons {
                flex-direction: column;
            }

            .option-btn {
                width: 100%;
            }

            .navigation-buttons {
                flex-direction: column;
            }

            .nav-btn {
                width: 100%;
            }
        }
    </style>
</head>
<body>
    <header class="header">
        <div class="header-content">
            <a href="/home" class="logo">
                <i class="fas fa-robot"></i>
                Financial AI Hub
            </a>
            <div class="user-section">
                <span class="welcome-text">Welcome, <%= username %></span>
                <a href="/logout" class="logout-btn">
                    <i class="fas fa-sign-out-alt"></i>
                    Logout
                </a>
            </div>
        </div>
    </header>

    <div class="container">
        <div class="progress-header">
            <h1>Complete Your Profile</h1>
            <p>Help us understand your financial situation better to provide personalized recommendations</p>
        </div>

        <div class="progress-container">
            <div class="progress-bar">
                <div class="progress-fill" id="progressFill"></div>
            </div>
            <div class="progress-text" id="progressText">Step 1 of 5</div>
        </div>

        <div class="card-container">
            <!-- Step 1: Credit Score -->
            <div class="card" id="step1">
                <i class="fas fa-chart-line card-icon"></i>
                <h2>What's your credit score?</h2>
                <p>Your credit score helps us understand your creditworthiness and financial history</p>
                <div class="input-group">
                    <input type="number" class="input-field" id="creditScore" placeholder="Enter your credit score (300-850)" min="300" max="850">
                </div>
            </div>

            <!-- Step 2: Geography -->
            <div class="card hidden" id="step2">
                <i class="fas fa-globe card-icon"></i>
                <h2>Where are you located?</h2>
                <p>Your location helps us provide region-specific financial recommendations</p>
                <div class="option-buttons">
                    <button class="option-btn" data-value="France">France</button>
                    <button class="option-btn" data-value="Spain">Spain</button>
                    <button class="option-btn" data-value="Germany">Germany</button>
                </div>
            </div>

            <!-- Step 3: Personal Information -->
            <div class="card hidden" id="step3">
                <i class="fas fa-user card-icon"></i>
                <h2>Tell us about yourself</h2>
                <p>This information helps us create a personalized financial profile</p>
                <div class="input-group">
                    <select class="input-field" id="gender">
                        <option value="">Select Gender</option>
                        <option value="Male">Male</option>
                        <option value="Female">Female</option>
                    </select>
                </div>
                <div class="input-group">
                    <input type="number" class="input-field" id="age" placeholder="Enter your age" min="18" max="100">
                </div>
                <div class="input-group">
                    <select class="input-field" id="maritalStatus">
                        <option value="">Select Marital Status</option>
                        <option value="Single">Single</option>
                        <option value="Married">Married</option>
                        <option value="Divorced">Divorced</option>
                    </select>
                </div>
            </div>

            <!-- Step 4: Financial Information -->
            <div class="card hidden" id="step4">
                <i class="fas fa-wallet card-icon"></i>
                <h2>Financial Details</h2>
                <p>Help us understand your current financial situation</p>
                <div class="input-group">
                    <input type="number" class="input-field" id="salary" placeholder="Enter your estimated salary" min="0">
                </div>
                <div class="input-group">
                    <input type="number" class="input-field" id="tenure" placeholder="Years with current employer" min="0" max="50">
                </div>
                <div class="input-group">
                    <input type="number" class="input-field" id="balance" placeholder="Current account balance" min="0">
                </div>
            </div>

            <!-- Step 5: Products and Activity -->
            <div class="card hidden" id="step5">
                <i class="fas fa-credit-card card-icon"></i>
                <h2>Products and Activity</h2>
                <p>Tell us about your current financial products and activity</p>
                <div class="input-group">
                    <input type="number" class="input-field" id="numProducts" placeholder="Number of products" min="0" max="10">
                </div>
                <div class="option-buttons">
                    <button class="option-btn" data-value="true">Has Credit Card</button>
                    <button class="option-btn" data-value="false">No Credit Card</button>
                </div>
                <div class="option-buttons">
                    <button class="option-btn" data-value="true">Active Member</button>
                    <button class="option-btn" data-value="false">Inactive Member</button>
                </div>
            </div>
        </div>

        <div class="navigation-buttons">
            <button class="nav-btn prev-btn" id="prevBtn" style="display: none;">
                <i class="fas fa-arrow-left"></i>
                Previous
            </button>
            <button class="nav-btn next-btn" id="nextBtn">
                Next
                <i class="fas fa-arrow-right"></i>
            </button>
        </div>

        <div id="errorMessage" class="error-message"></div>
    </div>

    <script>
        // Register service worker for PWA
        if ('serviceWorker' in navigator) {
            window.addEventListener('load', () => {
                navigator.serviceWorker.register('/sw.js')
                    .then(registration => {
                        console.log('ServiceWorker registration successful');
                    })
                    .catch(err => {
                        console.log('ServiceWorker registration failed: ', err);
                    });
            });
        }

        let currentStep = 1;
        const totalSteps = 5;
        const formData = {};

        // Update progress bar
        function updateProgress() {
            const progress = (currentStep / totalSteps) * 100;
            document.getElementById('progressFill').style.width = `${progress}%`;
            document.getElementById('progressText').textContent = `Step ${currentStep} of ${totalSteps}`;
        }

        // Show/hide navigation buttons
        function updateNavigationButtons() {
            const prevBtn = document.getElementById('prevBtn');
            const nextBtn = document.getElementById('nextBtn');

            prevBtn.style.display = currentStep > 1 ? 'flex' : 'none';
            nextBtn.textContent = currentStep === totalSteps ? 'Submit' : 'Next';
        }

        // Validate current step
        function validateStep() {
            const errorMessage = document.getElementById('errorMessage');
            errorMessage.style.display = 'none';

            switch (currentStep) {
                case 1:
                    const creditScore = document.getElementById('creditScore').value;
                    if (!creditScore || creditScore < 300 || creditScore > 850) {
                        errorMessage.textContent = 'Please enter a valid credit score between 300 and 850';
                        errorMessage.style.display = 'block';
                        return false;
                    }
                    formData.credit_score = parseInt(creditScore);
                    break;

                case 2:
                    const selectedGeography = document.querySelector('#step2 .option-btn.selected');
                    if (!selectedGeography) {
                        errorMessage.textContent = 'Please select your location';
                        errorMessage.style.display = 'block';
                        return false;
                    }
                    formData.geography = selectedGeography.dataset.value;
                    break;

                case 3:
                    const gender = document.getElementById('gender').value;
                    const age = document.getElementById('age').value;
                    const maritalStatus = document.getElementById('maritalStatus').value;

                    if (!gender || !age || !maritalStatus) {
                        errorMessage.textContent = 'Please fill in all personal information fields';
                        errorMessage.style.display = 'block';
                        return false;
                    }

                    if (age < 18 || age > 100) {
                        errorMessage.textContent = 'Please enter a valid age between 18 and 100';
                        errorMessage.style.display = 'block';
                        return false;
                    }

                    formData.gender = gender;
                    formData.age = parseInt(age);
                    formData.marital_status = maritalStatus;
                    break;

                case 4:
                    const salary = document.getElementById('salary').value;
                    const tenure = document.getElementById('tenure').value;
                    const balance = document.getElementById('balance').value;

                    if (!salary || !tenure || !balance) {
                        errorMessage.textContent = 'Please fill in all financial information fields';
                        errorMessage.style.display = 'block';
                        return false;
                    }

                    if (tenure < 0 || tenure > 50) {
                        errorMessage.textContent = 'Please enter a valid tenure between 0 and 50 years';
                        errorMessage.style.display = 'block';
                        return false;
                    }

                    formData.salary = parseFloat(salary);
                    formData.tenure = parseInt(tenure);
                    formData.balance = parseFloat(balance);
                    break;

                case 5:
                    const numProducts = document.getElementById('numProducts').value;
                    const hasCreditCard = document.querySelector('#step5 .option-btn.selected[data-value="true"]');
                    const isActive = document.querySelector('#step5 .option-btn.selected[data-value="true"]:last-child');

                    if (!numProducts || !hasCreditCard || !isActive) {
                        errorMessage.textContent = 'Please fill in all product and activity information';
                        errorMessage.style.display = 'block';
                        return false;
                    }

                    if (numProducts < 0 || numProducts > 10) {
                        errorMessage.textContent = 'Please enter a valid number of products between 0 and 10';
                        errorMessage.style.display = 'block';
                        return false;
                    }

                    formData.num_products = parseInt(numProducts);
                    formData.has_credit_card = hasCreditCard.dataset.value === 'true';
                    formData.is_active = isActive.dataset.value === 'true';
                    formData.exited = false;
                    break;
            }

            return true;
        }

        // Handle option button clicks
        document.querySelectorAll('.option-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                const step = this.closest('.card');
                step.querySelectorAll('.option-btn').forEach(b => b.classList.remove('selected'));
                this.classList.add('selected');
            });
        });

        // Handle next button click
        document.getElementById('nextBtn').addEventListener('click', async () => {
            if (!validateStep()) return;

            if (currentStep === totalSteps) {
                // Submit form
                try {
                    const response = await fetch('/information', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(formData)
                    });

                    if (response.ok) {
                        window.location.href = '/home';
                    } else {
                        const data = await response.json();
                        throw new Error(data.error || 'Failed to save information');
                    }
                } catch (error) {
                    const errorMessage = document.getElementById('errorMessage');
                    errorMessage.textContent = error.message;
                    errorMessage.style.display = 'block';
                }
                return;
            }

            // Move to next step
            const currentCard = document.getElementById(`step${currentStep}`);
            const nextCard = document.getElementById(`step${currentStep + 1}`);

            currentCard.classList.add('slide-out-left');
            setTimeout(() => {
                currentCard.classList.add('hidden');
                nextCard.classList.remove('hidden');
                nextCard.classList.add('slide-in');
                currentStep++;
                updateProgress();
                updateNavigationButtons();
            }, 500);
        });

        // Handle previous button click
        document.getElementById('prevBtn').addEventListener('click', () => {
            const currentCard = document.getElementById(`step${currentStep}`);
            const prevCard = document.getElementById(`step${currentStep - 1}`);

            currentCard.classList.add('slide-out-right');
            setTimeout(() => {
                currentCard.classList.add('hidden');
                prevCard.classList.remove('hidden');
                prevCard.classList.add('slide-in');
                currentStep--;
                updateProgress();
                updateNavigationButtons();
            }, 500);
        });

        // Initialize
        updateProgress();
        updateNavigationButtons();
    </script>
</body>
</html>
