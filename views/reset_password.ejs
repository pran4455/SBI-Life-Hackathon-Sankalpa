<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reset Password - Financial AI Hub</title>
    <link rel="manifest" href="/manifest.json">
    <meta name="theme-color" content="#667eea">
    <link rel="apple-touch-icon" href="/icons/icon-192x192.png">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            height: 100vh;
            width: 100vw;
            background: linear-gradient(90deg, #6733c6, #f757a7);
            background-size: cover;
            background-repeat: no-repeat;
            background-position: center;
            background-attachment: fixed;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .nav-bar {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 60px;
            background-color: rgba(0, 0, 0, 0.5);
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 0 20px;
            z-index: 1000;
        }

        .nav-bar img {
            height: 40px;
            max-width: 100px;
            margin-right: 20px;
        }

        .nav-links {
            display: flex;
            align-items: center;
        }

        .other-links {
            display: flex;
            gap: 20px;
            margin-right: 20px;
        }

        .other-links a {
            background-color: #ff69b4;
            color: white;
            text-decoration: none;
            font-size: 16px;
            padding: 8px 15px;
            transition: background-color 0.3s;
            border-radius: 5px;
        }

        .other-links a:hover {
            background-color: #e42688;
        }

        .container {
            width: 85%;
            max-width: 450px;
            background-color: rgba(255, 255, 255, 0.9);
            padding: 30px;
            border-radius: 20px;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
        }

        .title {
            text-align: center;
            color: #6d3cc5;
            font-size: 28px;
            margin-bottom: 25px;
            font-weight: bold;
        }

        .subtitle {
            text-align: center;
            color: #666;
            font-size: 14px;
            margin-bottom: 25px;
            line-height: 1.4;
        }

        .form-group {
            margin-bottom: 20px;
        }

        label {
            display: block;
            font-size: 16px;
            color: #333;
            margin-bottom: 8px;
            font-weight: 500;
        }

        .input-container {
            position: relative;
        }

        input {
            width: 100%;
            padding: 12px;
            border: 1px solid #ddd;
            border-radius: 8px;
            font-size: 16px;
            transition: border-color 0.3s;
            box-sizing: border-box;
        }

        input:focus {
            outline: none;
            border-color: #6d3cc5;
            box-shadow: 0 0 5px rgba(109, 60, 197, 0.3);
        }

        .password-input {
            padding-right: 45px;
        }

        .password-toggle {
            position: absolute;
            right: 12px;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            cursor: pointer;
            color: #6d3cc5;
            font-size: 14px;
            font-weight: 500;
        }

        .password-toggle:hover {
            color: #5a2eb0;
        }

        .btn {
            background-color: #6d3cc5;
            color: white;
            border: none;
            padding: 12px 15px;
            width: 100%;
            border-radius: 8px;
            cursor: pointer;
            font-size: 16px;
            font-weight: 500;
            transition: background-color 0.3s;
        }

        .btn:hover {
            background-color: #5a2eb0;
        }

        .btn:disabled {
            background-color: #ccc;
            cursor: not-allowed;
        }

        .error {
            color: #e74c3c;
            font-size: 14px;
            margin-top: 5px;
            text-align: center;
            background-color: #fdf2f2;
            padding: 10px;
            border-radius: 5px;
            border: 1px solid #f5c6cb;
        }

        .success {
            color: #27ae60;
            font-size: 14px;
            margin-top: 5px;
            text-align: center;
            background-color: #f0fff4;
            padding: 10px;
            border-radius: 5px;
            border: 1px solid #b3e5d1;
        }

        .form-footer {
            text-align: center;
            margin-top: 25px;
            font-size: 14px;
            color: #555;
        }

        .form-footer a {
            color: #6d3cc5;
            text-decoration: none;
            font-weight: 500;
        }

        .form-footer a:hover {
            text-decoration: underline;
        }

        .footer {
            background-color: rgba(0, 0, 0, 0.5);
            color: white;
            padding: 10px;
            text-align: center;
            width: 100%;
            position: fixed;
            bottom: 0;
            left: 0;
            z-index: 1000;
            font-size: 14px;
        }

        .password-requirements {
            font-size: 12px;
            color: #666;
            margin-top: 5px;
            line-height: 1.4;
        }

        .requirement {
            color: #e74c3c;
            transition: color 0.3s;
        }

        .requirement.valid {
            color: #27ae60;
        }

        .otp-section {
            background-color: #f8f9fa;
            border: 1px solid #dee2e6;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 25px;
        }

        .otp-title {
            color: #6d3cc5;
            font-size: 18px;
            font-weight: bold;
            margin-bottom: 10px;
        }

        .otp-input {
            text-align: center;
            font-size: 24px;
            font-weight: bold;
            letter-spacing: 8px;
        }

        .step-indicator {
            display: flex;
            justify-content: space-between;
            margin-bottom: 25px;
            font-size: 12px;
        }

        .step {
            flex: 1;
            text-align: center;
            padding: 8px;
            background-color: #f8f9fa;
            border-radius: 5px;
            margin: 0 2px;
        }

        .step.active {
            background-color: #6d3cc5;
            color: white;
        }

        .step.completed {
            background-color: #27ae60;
            color: white;
        }

        .loading {
            display: none;
            text-align: center;
            color: #6d3cc5;
            font-size: 14px;
            margin-top: 10px;
        }

        .resend-otp {
            color: #6d3cc5;
            cursor: pointer;
            text-decoration: underline;
            font-size: 12px;
            margin-top: 10px;
            display: block;
            text-align: center;
        }

        .resend-otp:hover {
            color: #5a2eb0;
        }

        .resend-otp.disabled {
            color: #ccc;
            cursor: not-allowed;
            text-decoration: none;
        }

        .debug-info {
            background-color: #f8f9fa;
            border: 1px solid #dee2e6;
            border-radius: 5px;
            padding: 10px;
            margin-top: 10px;
            font-size: 12px;
            color: #666;
        }
    </style>
</head>
<body>
    <!-- Navigation Bar -->
    <div class="nav-bar">
        <div class="nav-links">
            <div style="height: 40px; width: 120px; background-color: rgba(255,255,255,0.8); border-radius: 5px; display: flex; align-items: center; justify-content: center; color: #6d3cc5; font-weight: bold;">FinanceAI</div>
        </div>
        <div class="other-links">
            <a href="#" onclick="showMessage('Redirecting to Home...')">Home</a>
            <a href="#" onclick="showMessage('Redirecting to Login...')">Login</a>
            <a href="#" onclick="showMessage('Redirecting to Register...')">Register</a>
        </div>
    </div>

    <!-- Main Container -->
    <div class="container">
        <h1 class="title">Reset Password</h1>
        <p class="subtitle">
            Enter the OTP sent to your email and create a new password.
        </p>

        <!-- Step Indicator -->
        <div class="step-indicator">
            <div class="step completed">1. Email</div>
            <div class="step active">2. Verify OTP</div>
            <div class="step">3. New Password</div>
        </div>

        <form id="resetForm" method="POST" action="/reset-password">
            <!-- OTP Verification Section -->
            <div class="otp-section">
                <div class="otp-title">Enter OTP Code</div>
                <div class="form-group">
                    <input type="text" id="otp" name="otp" class="otp-input" 
                           placeholder="000000" maxlength="6" required
                           pattern="[0-9]{6}" title="Please enter a 6-digit OTP"
                           oninput="validateOTP()">
                </div>
                <div style="font-size: 12px; color: #666; text-align: center;">
                    Check your email for the 6-digit verification code
                </div>
                <span class="resend-otp" id="resendOtp" onclick="resendOTP()">
                    Resend OTP
                </span>
                <div id="resendTimer" style="display: none; text-align: center; font-size: 12px; color: #666; margin-top: 5px;">
                    Resend available in <span id="countdown">60</span> seconds
                </div>
            </div>

            <!-- Hidden email field -->
            <input type="hidden" id="email" name="email" value="user@example.com">

            <!-- New Password Section -->
            <div class="form-group">
                <label for="password">New Password:</label>
                <div class="input-container">
                    <input type="password" id="password" name="password" 
                           class="password-input" required
                           placeholder="Enter your new password"
                           minlength="8"
                           oninput="validatePassword()">
                    <button type="button" class="password-toggle" onclick="togglePassword('password')">Show</button>
                </div>
                <div class="password-requirements">
                    Password must contain:
                    <div class="requirement" id="length">• At least 8 characters</div>
                    <div class="requirement" id="uppercase">• One uppercase letter</div>
                    <div class="requirement" id="lowercase">• One lowercase letter</div>
                    <div class="requirement" id="number">• One number</div>
                    <div class="requirement" id="special">• One special character</div>
                </div>
            </div>

            <div class="form-group">
                <label for="confirmPassword">Confirm New Password:</label>
                <div class="input-container">
                    <input type="password" id="confirmPassword" name="confirmPassword" 
                           class="password-input" required
                           placeholder="Confirm your new password"
                           minlength="8"
                           oninput="validatePasswordMatch()">
                    <button type="button" class="password-toggle" onclick="togglePassword('confirmPassword')">Show</button>
                </div>
                <div id="passwordMatchError" style="color: #e74c3c; font-size: 12px; margin-top: 5px; display: none;">
                    Passwords do not match
                </div>
            </div>

            <!-- Debug Information -->
            <div class="debug-info" id="debugInfo">
                <strong>Form Status:</strong><br>
                OTP Valid: <span id="otpStatus">❌</span><br>
                Password Valid: <span id="passwordStatus">❌</span><br>
                Passwords Match: <span id="matchStatus">❌</span><br>
                Button Enabled: <span id="buttonStatus">❌</span>
            </div>

            <button type="submit" class="btn" id="resetBtn" disabled>Reset Password</button>

            <div class="loading" id="loading" style="display: none;">
                Processing your request...
            </div>

            <div id="errorMessage" class="error" style="display: none;"></div>
            <div id="successMessage" class="success" style="display: none;"></div>
        </form>

        <div class="form-footer">
            Didn't receive the OTP? <a href="#" onclick="resendOTP()">Send Again</a><br>
            <a href="/login" onclick="showMessage('Redirecting to Login...')">Back to Login</a>
        </div>
    </div>
    <script>
        let resendTimer;
        let resendCount = 0;

        function togglePassword(fieldId) {
            const field = document.getElementById(fieldId);
            const button = field.nextElementSibling;
            
            if (field.type === 'password') {
                field.type = 'text';
                button.textContent = 'Hide';
            } else {
                field.type = 'password';
                button.textContent = 'Show';
            }
        }

        function validateOTP() {
            const otp = document.getElementById('otp').value;
            const isValid = /^[0-9]{6}$/.test(otp);
            
            // Update debug info
            document.getElementById('otpStatus').textContent = isValid ? '✅' : '❌';
            
            checkFormValidity();
            return isValid;
        }

        function validatePassword() {
            const password = document.getElementById('password');
            const value = password.value;
            const requirements = {
                length: value.length >= 8,
                uppercase: /[A-Z]/.test(value),
                lowercase: /[a-z]/.test(value),
                number: /\d/.test(value),
                special: /[!@#$%^&*(),.?":{}|<>]/.test(value)
            };

            // Update requirement indicators
            Object.keys(requirements).forEach(req => {
                const element = document.getElementById(req);
                if (requirements[req]) {
                    element.classList.add('valid');
                } else {
                    element.classList.remove('valid');
                }
            });

            const isPasswordValid = Object.values(requirements).every(req => req);
            
            // Update debug info
            document.getElementById('passwordStatus').textContent = isPasswordValid ? '✅' : '❌';
            
            validatePasswordMatch();
            checkFormValidity();

            return isPasswordValid;
        }

        function validatePasswordMatch() {
            const password = document.getElementById('password').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            const errorElement = document.getElementById('passwordMatchError');

            const doMatch = confirmPassword && password === confirmPassword;
            
            if (confirmPassword && password !== confirmPassword) {
                errorElement.style.display = 'block';
            } else {
                errorElement.style.display = 'none';
            }

            // Update debug info
            document.getElementById('matchStatus').textContent = doMatch ? '✅' : '❌';
            
            checkFormValidity();
            return doMatch;
        }

        function checkFormValidity() {
            const otp = document.getElementById('otp').value;
            const password = document.getElementById('password').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            const resetBtn = document.getElementById('resetBtn');

            const isOTPValid = /^[0-9]{6}$/.test(otp);
            const isPasswordValid = validatePasswordHelper(password);
            const doPasswordsMatch = password === confirmPassword && password.length > 0;

            const allValid = isOTPValid && isPasswordValid && doPasswordsMatch;
            
            resetBtn.disabled = !allValid;
            
            // Update debug info
            document.getElementById('buttonStatus').textContent = allValid ? '✅' : '❌';
            
            console.log('Form validation:', {
                otp: otp,
                otpValid: isOTPValid,
                passwordValid: isPasswordValid,
                passwordsMatch: doPasswordsMatch,
                buttonEnabled: allValid
            });
        }

        // Helper function to validate password without side effects
        function validatePasswordHelper(password) {
            return password.length >= 8 &&
                   /[A-Z]/.test(password) &&
                   /[a-z]/.test(password) &&
                   /\d/.test(password) &&
                   /[!@#$%^&*(),.?":{}|<>]/.test(password);
        }

        function resendOTP() {
            const resendButton = document.getElementById('resendOtp');
            const timerDiv = document.getElementById('resendTimer');
            const countdownSpan = document.getElementById('countdown');

            if (resendButton.classList.contains('disabled')) {
                return;
            }

            resendCount++;
            showMessage(`OTP resent successfully! (Attempt ${resendCount})`, 'success');

            // Disable resend button and start countdown
            resendButton.classList.add('disabled');
            resendButton.textContent = 'OTP Sent';
            timerDiv.style.display = 'block';

            let timeLeft = 60;
            resendTimer = setInterval(() => {
                timeLeft--;
                countdownSpan.textContent = timeLeft;

                if (timeLeft <= 0) {
                    clearInterval(resendTimer);
                    resendButton.classList.remove('disabled');
                    resendButton.textContent = 'Resend OTP';
                    timerDiv.style.display = 'none';
                }
            }, 1000);
        }

        function updateStepIndicator(step) {
            const steps = document.querySelectorAll('.step');
            steps.forEach((stepEl, index) => {
                stepEl.classList.remove('active');
                if (index < step - 1) {
                    stepEl.classList.add('completed');
                } else if (index === step - 1) {
                    stepEl.classList.add('active');
                }
            });
        }

        function showMessage(message, type = 'info') {
            const errorDiv = document.getElementById('errorMessage');
            const successDiv = document.getElementById('successMessage');

            // Hide both messages first
            errorDiv.style.display = 'none';
            successDiv.style.display = 'none';

            if (type === 'error') {
                errorDiv.textContent = message;
                errorDiv.style.display = 'block';
            } else if (type === 'success') {
                successDiv.textContent = message;
                successDiv.style.display = 'block';
            } else {
                // For info messages, show in console or alert
                console.log(message);
            }

            // Auto-hide success messages after 5 seconds
            if (type === 'success') {
                setTimeout(() => {
                    successDiv.style.display = 'none';
                }, 5000);
            }
        }

        // Initialize form validation on page load
        document.addEventListener('DOMContentLoaded', function() {
            checkFormValidity();
        });

        // Clear messages when user starts typing
        document.getElementById('otp').addEventListener('input', function() {
            document.getElementById('errorMessage').style.display = 'none';
            document.getElementById('successMessage').style.display = 'none';
        });

        document.getElementById('password').addEventListener('input', function() {
            document.getElementById('errorMessage').style.display = 'none';
        });

        // Form submission handler
        document.getElementById('resetForm').addEventListener('submit', function(event) {
            event.preventDefault();
            
            const otp = document.getElementById('otp').value;
            const password = document.getElementById('password').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            const loading = document.getElementById('loading');
            const resetBtn = document.getElementById('resetBtn');

            // Validate form before submission
            if (!validateOTP() || !validatePassword() || !validatePasswordMatch()) {
                showMessage('Please fix the validation errors before submitting.', 'error');
                return;
            }

            // Show loading state
            loading.style.display = 'block';
            resetBtn.disabled = true;
            const originalText = resetBtn.textContent;
            resetBtn.textContent = 'Processing...';

            // Simulate successful reset (since this is a demo)
            setTimeout(() => {
                showMessage('Password reset successful! You can now login with your new password.', 'success');
                updateStepIndicator(3);
                
                // Reset button state
                loading.style.display = 'none';
                resetBtn.disabled = false;
                resetBtn.textContent = originalText;
                
                // In a real app, redirect to login
                // window.location.href = '/login';
            }, 2000);
        });
    </script>
</body>
</html>
