<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reset Password - Financial AI Hub</title>
    <link rel="manifest" href="/manifest.json">
    <meta name="theme-color" content="#667eea">
    <link rel="apple-touch-icon" href="/icons/icon-192x192.png">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            overflow-x: hidden;
            color: white;
            margin: 0;
            padding: 0;
        }

        /* Navigation Bar */
        .nav-bar {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(20px);
            border-bottom: 1px solid rgba(255, 255, 255, 0.2);
            padding: 1rem 2rem;
            position: sticky;
            top: 0;
            z-index: 100;
            display: flex;
            justify-content: space-between;
            align-items: center;
            animation: slideDown 0.5s ease forwards;
        }

        .nav-bar img {
            height: 45px;
            width: auto;
        }

        .nav-links {
            display: flex;
            align-items: center;
            gap: 1.5rem;
        }

        .other-links {
            display: flex;
            align-items: center;
            gap: 1.5rem;
        }

        .other-links a, .nav-links a {
            color: white;
            text-decoration: none;
            font-weight: 500;
            padding: 0.5rem 1rem;
            border-radius: 25px;
            transition: all 0.3s ease;
            background: rgba(255, 255, 255, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            backdrop-filter: blur(10px);
        }

        .other-links a:hover, .nav-links a:hover {
            background: rgba(255, 255, 255, 0.2);
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }

        /* Container Styles */
        .container {
            max-width: 500px;
            margin: 60px auto 40px;
            padding: 3rem;
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            border: 1px solid rgba(255, 255, 255, 0.2);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            animation: fadeInUp 0.8s ease forwards;
        }

        .title {
            font-size: 2rem;
            font-weight: 700;
            text-align: center;
            margin-bottom: 1rem;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
            background: linear-gradient(135deg, #ffffff, #e0e7ff);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .description {
            font-size: 1.1rem;
            text-align: center;
            margin-bottom: 2rem;
            opacity: 0.9;
            color: rgba(255, 255, 255, 0.8);
            line-height: 1.5;
        }

        /* Form Styles */
        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
            color: rgba(255, 255, 255, 0.9);
        }

        .form-group input {
            width: 100%;
            padding: 1rem;
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 10px;
            background: rgba(255, 255, 255, 0.1);
            color: white;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        .form-group input:focus {
            outline: none;
            border-color: rgba(255, 255, 255, 0.5);
            background: rgba(255, 255, 255, 0.15);
            box-shadow: 0 0 0 3px rgba(255, 255, 255, 0.1);
        }

        .form-group input::placeholder {
            color: rgba(255, 255, 255, 0.5);
        }

        /* Password Strength Indicator */
        .password-strength {
            margin-top: 0.5rem;
            height: 4px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 2px;
            overflow: hidden;
        }

        .strength-bar {
            height: 100%;
            width: 0;
            transition: all 0.3s ease;
            border-radius: 2px;
        }

        .weak { background: #ff4d4d; width: 33.33%; }
        .medium { background: #ffa64d; width: 66.66%; }
        .strong { background: #4dff4d; width: 100%; }

        .strength-text {
            font-size: 0.875rem;
            margin-top: 0.5rem;
            color: rgba(255, 255, 255, 0.7);
        }

        /* Button Styles */
        .btn {
            width: 100%;
            padding: 1rem 2rem;
            font-size: 1.1rem;
            font-weight: 600;
            text-decoration: none;
            border-radius: 50px;
            transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
            cursor: pointer;
            border: none;
            position: relative;
            overflow: hidden;
            background: linear-gradient(135deg, #4f46e5, #7c3aed);
            color: white;
            box-shadow: 0 10px 30px rgba(79, 70, 229, 0.3);
            margin-top: 1rem;
        }

        .btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.5s;
        }

        .btn:hover::before {
            left: 100%;
        }

        .btn:hover {
            transform: translateY(-3px) scale(1.02);
            box-shadow: 0 15px 40px rgba(79, 70, 229, 0.4);
            background: linear-gradient(135deg, #5b52f0, #8b46f7);
        }

        .btn:disabled {
            background: rgba(255, 255, 255, 0.1);
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }

        /* Message Styles */
        .error {
            background: rgba(220, 53, 69, 0.2);
            border: 1px solid rgba(220, 53, 69, 0.5);
            color: #ff6b6b;
            padding: 1rem;
            border-radius: 15px;
            margin-bottom: 1rem;
            text-align: center;
            backdrop-filter: blur(10px);
            font-weight: 500;
        }

        .success {
            background: rgba(40, 167, 69, 0.2);
            border: 1px solid rgba(40, 167, 69, 0.5);
            color: #51ff7d;
            padding: 1rem;
            border-radius: 15px;
            margin-bottom: 1rem;
            text-align: center;
            backdrop-filter: blur(10px);
            font-weight: 500;
        }

        /* Back to Login Link */
        .back-to-login {
            text-align: center;
            margin-top: 1.5rem;
        }

        .back-to-login a {
            color: rgba(255, 255, 255, 0.8);
            text-decoration: none;
            font-weight: 500;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
        }

        .back-to-login a:hover {
            color: white;
            transform: translateX(-5px);
        }

        /* Animations */
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes slideDown {
            from {
                transform: translateY(-100%);
                opacity: 0;
            }
            to {
                transform: translateY(0);
                opacity: 1;
            }
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .nav-bar {
                padding: 1rem;
                flex-direction: column;
                gap: 1rem;
            }
            
            .other-links {
                gap: 1rem;
            }
            
            .container {
                margin: 40px 1rem;
                padding: 2rem;
            }
            
            .title {
                font-size: 1.75rem;
            }
            
            .description {
                font-size: 1rem;
            }
            
            .form-group input {
                padding: 0.875rem;
            }
        }
    </style>
</head>
<body>
    <nav class="nav-bar">
        <div class="nav-links">
            <img src="/icons/logo.png" alt="Financial AI Hub Logo">
        </div>
        <div class="other-links">
            <a href="/about" class="about">About</a>
            <a href="/login" class="login">Login</a>
        </div>
    </nav>

    <div class="container">
        <h1 class="title">Reset Password</h1>
        <p class="description">Enter the code sent to your email and create a new password.</p>
        
        <% if (error) { %>
            <div class="error"><%= error %></div>
        <% } %>
        
        <% if (success) { %>
            <div class="success"><%= success %></div>
        <% } %>

        <form action="/reset-password" method="POST">
            <div class="form-group">
                <label for="otp">Verification Code</label>
                <input type="text" 
                       id="otp" 
                       name="otp" 
                       placeholder="Enter the 6-digit code" 
                       maxlength="6" 
                       pattern="[0-9]{6}" 
                       required>
            </div>

            <div class="form-group">
                <label for="password">New Password</label>
                <input type="password" 
                       id="password" 
                       name="password" 
                       placeholder="Enter new password" 
                       minlength="8" 
                       required>
                <div class="password-strength">
                    <div class="strength-bar"></div>
                </div>
                <div class="strength-text"></div>
            </div>

            <div class="form-group">
                <label for="confirmPassword">Confirm Password</label>
                <input type="password" 
                       id="confirmPassword" 
                       name="confirmPassword" 
                       placeholder="Confirm new password" 
                       minlength="8" 
                       required>
            </div>
            
            <button type="submit" class="btn" id="submitBtn">Reset Password</button>
        </form>

        <div class="back-to-login">
            <a href="/login">
                <i class="fas fa-arrow-left"></i>
                Back to Login
            </a>
        </div>
    </div>

    <script>
        // Register service worker for PWA
        if ('serviceWorker' in navigator) {
            window.addEventListener('load', () => {
                navigator.serviceWorker.register('/sw.js')
                    .then(registration => {
                        console.log('ServiceWorker registration successful');
                    })
                    .catch(err => {
                        console.log('ServiceWorker registration failed: ', err);
                    });
            });
        }

        // Password strength checker
        const passwordInput = document.getElementById('password');
        const strengthBar = document.querySelector('.strength-bar');
        const strengthText = document.querySelector('.strength-text');
        const submitBtn = document.getElementById('submitBtn');

        function checkPasswordStrength(password) {
            let strength = 0;
            
            // Length check
            if (password.length >= 8) strength += 1;
            
            // Contains number
            if (/\d/.test(password)) strength += 1;
            
            // Contains lowercase
            if (/[a-z]/.test(password)) strength += 1;
            
            // Contains uppercase
            if (/[A-Z]/.test(password)) strength += 1;
            
            // Contains special character
            if (/[^A-Za-z0-9]/.test(password)) strength += 1;
            
            return strength;
        }

        function updatePasswordStrength(password) {
            const strength = checkPasswordStrength(password);
            
            strengthBar.className = 'strength-bar';
            if (strength <= 2) {
                strengthBar.classList.add('weak');
                strengthText.textContent = 'Weak password';
                strengthText.style.color = '#ff4d4d';
            } else if (strength <= 4) {
                strengthBar.classList.add('medium');
                strengthText.textContent = 'Medium strength password';
                strengthText.style.color = '#ffa64d';
            } else {
                strengthBar.classList.add('strong');
                strengthText.textContent = 'Strong password';
                strengthText.style.color = '#4dff4d';
            }
        }

        passwordInput.addEventListener('input', (e) => {
            updatePasswordStrength(e.target.value);
        });

        // Form validation
        const form = document.querySelector('form');
        const confirmPasswordInput = document.getElementById('confirmPassword');
        const otpInput = document.getElementById('otp');

        form.addEventListener('submit', (e) => {
            let hasError = false;
            
            // Clear previous errors
            const errorDivs = form.querySelectorAll('.error');
            errorDivs.forEach(div => div.remove());
            
            // Validate OTP
            if (!otpInput.value.match(/^\d{6}$/)) {
                const errorDiv = document.createElement('div');
                errorDiv.className = 'error';
                errorDiv.textContent = 'Please enter a valid 6-digit code';
                form.insertBefore(errorDiv, form.firstChild);
                hasError = true;
            }
            
            // Validate password
            if (passwordInput.value.length < 8) {
                const errorDiv = document.createElement('div');
                errorDiv.className = 'error';
                errorDiv.textContent = 'Password must be at least 8 characters long';
                form.insertBefore(errorDiv, form.firstChild);
                hasError = true;
            }
            
            // Check password match
            if (passwordInput.value !== confirmPasswordInput.value) {
                const errorDiv = document.createElement('div');
                errorDiv.className = 'error';
                errorDiv.textContent = 'Passwords do not match';
                form.insertBefore(errorDiv, form.firstChild);
                hasError = true;
            }
            
            if (hasError) {
                e.preventDefault();
            }
        });

        // Auto-format OTP input
        otpInput.addEventListener('input', (e) => {
            e.target.value = e.target.value.replace(/[^0-9]/g, '').slice(0, 6);
        });

        // Clear error messages when user starts typing
        [otpInput, passwordInput, confirmPasswordInput].forEach(input => {
            input.addEventListener('input', () => {
                const errorDiv = form.querySelector('.error');
                if (errorDiv) {
                    errorDiv.remove();
                }
            });
        });
    </script>
</body>
</html>
