<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Financial AI Chatbot - Financial AI Hub</title>
    <link rel="manifest" href="/manifest.json">
    <meta name="theme-color" content="#667eea">
    <link rel="apple-touch-icon" href="/icons/icon-192x192.png">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        :root {
            --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            --primary-color: #667eea;
            --secondary-color: #764ba2;
            --background-light: #f8fafc;
            --background-white: #ffffff;
            --border-light: #e2e8f0;
            --text-primary: #2d3748;
            --text-secondary: #64748b;
            --text-muted: #94a3b8;
            --shadow-light: 0 2px 10px rgba(0, 0, 0, 0.1);
            --shadow-medium: 0 10px 30px rgba(102, 126, 234, 0.3);
            --shadow-heavy: 0 20px 60px rgba(0, 0, 0, 0.1);
            --border-radius: 20px;
            --border-radius-small: 12px;
            --transition: all 0.3s ease;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: var(--primary-gradient);
            min-height: 100vh;
            line-height: 1.6;
            color: var(--text-primary);
        }

        .header {
            background: rgba(255, 255, 255, 0.15);
            backdrop-filter: blur(20px);
            border-bottom: 1px solid rgba(255, 255, 255, 0.2);
            padding: 1rem 2rem;
            position: sticky;
            top: 0;
            z-index: 100;
            transition: var(--transition);
            animation: slideDown 0.5s ease forwards;
        }

        .header-content {
            max-width: 1400px;
            margin: 0 auto;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .logo {
            font-size: 1.8rem;
            font-weight: 700;
            color: white;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            text-decoration: none;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
            transition: var(--transition);
        }

        .logo:hover {
            transform: translateY(-2px);
            text-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }

        .user-section {
            display: flex;
            align-items: center;
            gap: 1.5rem;
        }

        .welcome-text {
            color: white;
            font-weight: 600;
            font-size: 1.15rem;
            text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);
        }

        .logout-btn {
            background: rgba(255, 255, 255, 0.15);
            color: white;
            border: 1px solid rgba(255, 255, 255, 0.25);
            padding: 0.6rem 1.2rem;
            border-radius: 25px;
            text-decoration: none;
            font-weight: 500;
            transition: var(--transition);
            backdrop-filter: blur(10px);
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .logout-btn:hover {
            background: rgba(255, 255, 255, 0.25);
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }

        .container {
            max-width: 1000px;
            margin: 2rem auto;
            padding: 0 2rem;
            animation: fadeIn 0.8s ease forwards;
        }

        .chatbot-header {
            text-align: center;
            margin-bottom: 2rem;
            padding: 2rem;
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(20px);
            border-radius: var(--border-radius);
            color: white;
            box-shadow: var(--shadow-medium);
            border: 1px solid rgba(255, 255, 255, 0.2);
            position: relative;
            overflow: hidden;
        }

        .chatbot-header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(45deg, rgba(255,255,255,0.1) 0%, transparent 50%);
            pointer-events: none;
        }

        .chatbot-header h2 {
            margin: 0 0 1rem 0;
            font-size: 2rem;
            font-weight: 700;
            position: relative;
            z-index: 1;
            background: linear-gradient(135deg, #fff, #e2e8f0);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .chatbot-header p {
            margin: 0;
            font-size: 1.1rem;
            opacity: 0.95;
            font-weight: 500;
            line-height: 1.6;
            max-width: 600px;
            margin: 0 auto;
            position: relative;
            z-index: 1;
        }

        .chatbot-container {
            background: rgba(255, 255, 255, 0.95);
            border-radius: var(--border-radius);
            box-shadow: var(--shadow-heavy);
            overflow: hidden;
            height: 600px;
            display: flex;
            flex-direction: column;
            border: 1px solid rgba(255, 255, 255, 0.2);
            backdrop-filter: blur(20px);
            position: relative;
        }

        .chat-messages {
            flex: 1;
            padding: 1.5rem;
            overflow-y: auto;
            background: var(--background-light);
            scroll-behavior: smooth;
            position: relative;
        }

        .chat-messages::-webkit-scrollbar {
            width: 6px;
        }

        .chat-messages::-webkit-scrollbar-track {
            background: #f1f5f9;
            border-radius: 3px;
        }

        .chat-messages::-webkit-scrollbar-thumb {
            background: linear-gradient(to bottom, #cbd5e1, #94a3b8);
            border-radius: 3px;
            transition: var(--transition);
        }

        .chat-messages::-webkit-scrollbar-thumb:hover {
            background: linear-gradient(to bottom, #94a3b8, #64748b);
        }

        .message {
            margin-bottom: 1.5rem;
            display: flex;
            animation: messageSlideIn 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        }

        @keyframes messageSlideIn {
            from {
                opacity: 0;
                transform: translateY(15px) scale(0.95);
            }
            to {
                opacity: 1;
                transform: translateY(0) scale(1);
            }
        }

        .user-message {
            justify-content: flex-end;
        }

        .bot-message {
            justify-content: flex-start;
        }

        .message-content {
            max-width: 75%;
            padding: 1rem 1.25rem;
            border-radius: var(--border-radius);
            font-size: 1rem;
            line-height: 1.6;
            word-wrap: break-word;
            position: relative;
            box-shadow: var(--shadow-light);
        }

        .user-message .message-content {
            background: var(--primary-gradient);
            color: white;
            border-bottom-right-radius: 6px;
            box-shadow: 0 4px 20px rgba(102, 126, 234, 0.25);
        }

        .bot-message .message-content {
            background: white;
            color: var(--text-primary);
            border-bottom-left-radius: 6px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }

        .message-time {
            font-size: 0.75rem;
            opacity: 0.7;
            margin-top: 0.5rem;
            text-align: right;
        }

        .chat-input-container {
            padding: 1.5rem;
            background: white;
            border-top: 1px solid var(--border-light);
            display: flex;
            gap: 1rem;
            align-items: center;
        }

        .chat-input {
            flex: 1;
            padding: 1rem 1.5rem;
            border: 2px solid var(--border-light);
            border-radius: var(--border-radius);
            font-size: 1rem;
            transition: var(--transition);
            background: var(--background-light);
        }

        .chat-input:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .send-btn {
            background: var(--primary-gradient);
            color: white;
            border: none;
            padding: 1rem;
            border-radius: var(--border-radius);
            cursor: pointer;
            transition: var(--transition);
            display: flex;
            align-items: center;
            justify-content: center;
            width: 50px;
            height: 50px;
        }

        .send-btn:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-medium);
        }

        .send-btn:disabled {
            opacity: 0.7;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }

        .typing-indicator {
            display: flex;
            gap: 0.5rem;
            padding: 1rem;
            background: white;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow-light);
            margin-bottom: 1rem;
            width: fit-content;
        }

        .typing-dot {
            width: 8px;
            height: 8px;
            background: var(--primary-color);
            border-radius: 50%;
            animation: typingAnimation 1.4s infinite ease-in-out;
        }

        .typing-dot:nth-child(1) { animation-delay: 0s; }
        .typing-dot:nth-child(2) { animation-delay: 0.2s; }
        .typing-dot:nth-child(3) { animation-delay: 0.4s; }

        @keyframes typingAnimation {
            0%, 60%, 100% { transform: translateY(0); }
            30% { transform: translateY(-4px); }
        }

        @keyframes slideDown {
            from {
                transform: translateY(-100%);
                opacity: 0;
            }
            to {
                transform: translateY(0);
                opacity: 1;
            }
        }

        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        @media (max-width: 768px) {
            .header {
                padding: 1rem;
            }

            .header-content {
                flex-direction: column;
                gap: 1rem;
            }

            .user-section {
                flex-direction: column;
                gap: 1rem;
            }

            .welcome-text {
                text-align: center;
            }

            .container {
                padding: 1rem;
            }

            .chatbot-header {
                padding: 1.5rem;
            }

            .chatbot-header h2 {
                font-size: 1.5rem;
            }

            .chatbot-header p {
                font-size: 1rem;
            }

            .chatbot-container {
                height: calc(100vh - 300px);
            }

            .message-content {
                max-width: 85%;
            }
        }
    </style>
</head>
<body>
    <header class="header">
        <div class="header-content">
            <a href="/home" class="logo">
                <i class="fas fa-robot"></i>
                Financial AI Hub
            </a>
            <div class="user-section">
                <span class="welcome-text">Welcome, <%= username %></span>
                <a href="/logout" class="logout-btn">
                    <i class="fas fa-sign-out-alt"></i>
                    Logout
                </a>
            </div>
        </div>
    </header>

    <div class="container">
        <div class="chatbot-header">
            <h2>Financial AI Assistant</h2>
            <p>Your personal financial advisor powered by artificial intelligence. Ask me anything about financial planning, investments, or insurance policies.</p>
        </div>

        <div class="chatbot-container">
            <div class="chat-messages" id="chatMessages">
                <div class="message bot-message">
                    <div class="message-content">
                        Hello! I'm your Financial AI Assistant. How can I help you today?
                        <div class="message-time">Just now</div>
                    </div>
                </div>
            </div>

            <div class="chat-input-container">
                <input type="text" class="chat-input" id="userInput" placeholder="Type your message here..." autocomplete="off">
                <button class="send-btn" id="sendBtn">
                    <i class="fas fa-paper-plane"></i>
                </button>
            </div>
        </div>
    </div>

    <script>
        // Register service worker for PWA
        if ('serviceWorker' in navigator) {
            window.addEventListener('load', () => {
                navigator.serviceWorker.register('/sw.js')
                    .then(registration => {
                        console.log('ServiceWorker registration successful');
                    })
                    .catch(err => {
                        console.log('ServiceWorker registration failed: ', err);
                    });
            });
        }

        const chatMessages = document.getElementById('chatMessages');
        const userInput = document.getElementById('userInput');
        const sendBtn = document.getElementById('sendBtn');

        function addMessage(content, isUser = false) {
            const messageDiv = document.createElement('div');
            messageDiv.className = `message ${isUser ? 'user-message' : 'bot-message'}`;
            
            const messageContent = document.createElement('div');
            messageContent.className = 'message-content';
            messageContent.innerHTML = `
                ${content}
                <div class="message-time">${new Date().toLocaleTimeString()}</div>
            `;
            
            messageDiv.appendChild(messageContent);
            chatMessages.appendChild(messageDiv);
            chatMessages.scrollTop = chatMessages.scrollHeight;
        }

        function showTypingIndicator() {
            const indicator = document.createElement('div');
            indicator.className = 'message bot-message';
            indicator.innerHTML = `
                <div class="typing-indicator">
                    <div class="typing-dot"></div>
                    <div class="typing-dot"></div>
                    <div class="typing-dot"></div>
                </div>
            `;
            chatMessages.appendChild(indicator);
            chatMessages.scrollTop = chatMessages.scrollHeight;
            return indicator;
        }

        async function sendMessage() {
            const message = userInput.value.trim();
            if (!message) return;

            // Disable input and button while processing
            userInput.disabled = true;
            sendBtn.disabled = true;

            // Add user message
            addMessage(message, true);
            userInput.value = '';

            // Show typing indicator
            const typingIndicator = showTypingIndicator();

            try {
                const response = await fetch('/api/chat', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ message })
                });

                if (!response.ok) {
                    throw new Error('Failed to get response');
                }

                const data = await response.json();

                // Remove typing indicator
                typingIndicator.remove();

                // Add bot response
                addMessage(data.response);
            } catch (error) {
                console.error('Error:', error);
                typingIndicator.remove();
                addMessage('Sorry, I encountered an error. Please try again.');
            }

            // Re-enable input and button
            userInput.disabled = false;
            sendBtn.disabled = false;
            userInput.focus();
        }

        // Event listeners
        sendBtn.addEventListener('click', sendMessage);
        userInput.addEventListener('keypress', (e) => {
            if (e.key === 'Enter') {
                sendMessage();
            }
        });

        // Focus input on load
        userInput.focus();
    </script>
</body>
</html>
