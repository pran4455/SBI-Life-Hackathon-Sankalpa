<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Policy Recommendations - Financial AI Hub</title>
    <link rel="manifest" href="/manifest.json">
    <meta name="theme-color" content="#667eea">
    <link rel="apple-touch-icon" href="/icons/icon-192x192.png">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            overflow-x: hidden;
            color: #2d3748;
        }

        .header {
            background: rgba(255, 255, 255, 0.15);
            backdrop-filter: blur(20px);
            border-bottom: 1px solid rgba(255, 255, 255, 0.2);
            padding: 1rem 2rem;
            position: sticky;
            top: 0;
            z-index: 100;
            transition: all 0.3s ease;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            animation: slideDown 0.5s ease forwards;
        }

        .header-content {
            max-width: 1400px;
            margin: 0 auto;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .logo {
            font-size: 1.8rem;
            font-weight: 700;
            color: white;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            text-decoration: none;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
            transition: all 0.3s ease;
        }

        .logo:hover {
            transform: translateY(-2px);
            text-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }

        .user-section {
            display: flex;
            align-items: center;
            gap: 1.5rem;
        }

        .welcome-text {
            color: white;
            font-weight: 600;
            font-size: 1.15rem;
            text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);
        }

        .logout-btn {
            background: rgba(255, 255, 255, 0.15);
            color: white;
            border: 1px solid rgba(255, 255, 255, 0.25);
            padding: 0.6rem 1.2rem;
            border-radius: 25px;
            text-decoration: none;
            font-weight: 500;
            transition: all 0.3s ease;
            backdrop-filter: blur(10px);
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .logout-btn:hover {
            background: rgba(255, 255, 255, 0.25);
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }

        .container {
            max-width: 1400px;
            margin: 2rem auto;
            padding: 0 2rem;
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 2rem;
            min-height: calc(100vh - 100px);
            align-items: stretch;
            animation: fadeIn 0.8s ease forwards;
        }

        .recommend-box {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 20px;
            padding: 2rem;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
            display: flex;
            flex-direction: column;
            gap: 1.5rem;
            height: 700px;
            overflow-y: auto;
            transition: all 0.3s ease;
        }

        .recommend-box iframe {
            height: 100%;
            min-height: 700px;
            border: none;
            border-radius: 15px;
        }

        .recommend-box h1 {
            color: #2d3748;
            font-size: 2rem;
            font-weight: 700;
            text-align: center;
            margin-bottom: 1rem;
            background: linear-gradient(135deg, #667eea, #764ba2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .recommend-box h2 {
            color: #2d3748;
            font-size: 1.5rem;
            font-weight: 600;
            margin-bottom: 1rem;
        }

        #userInput {
            width: 100%;
            min-height: 120px;
            max-height: 200px;
            padding: 1rem;
            border: 2px solid #e2e8f0;
            border-radius: 15px;
            background: white;
            color: #2d3748;
            font-size: 1rem;
            resize: none;
            transition: all 0.3s ease;
        }

        #userInput::placeholder {
            color: #a0aec0;
        }

        #userInput:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        #getRecommendationsBtn {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            border: none;
            padding: 1rem 2rem;
            border-radius: 25px;
            font-size: 1.1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        #getRecommendationsBtn:hover:not(:disabled) {
            transform: translateY(-3px);
            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.4);
            background: linear-gradient(135deg, #5a6fd8, #6b4190);
        }

        #getRecommendationsBtn:disabled {
            opacity: 0.7;
            cursor: not-allowed;
            transform: none;
        }

        .loading {
            width: 24px;
            height: 24px;
            border: 3px solid rgba(255, 255, 255, 0.3);
            border-top: 3px solid white;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        #recommendations {
            background: white;
            border-radius: 15px;
            padding: 1.5rem;
            border: 1px solid #e2e8f0;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
        }

        #policyList {
            list-style: none;
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        .policy-item {
            background: white;
            border-radius: 15px;
            padding: 1.5rem;
            border: 1px solid #e2e8f0;
            transition: all 0.3s ease;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        }

        .policy-item:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            border-color: #667eea;
        }

        .policy-header {
            display: flex;
            align-items: center;
            gap: 1rem;
            margin-bottom: 1rem;
        }

        .policy-header input[type="radio"] {
            width: 20px;
            height: 20px;
            accent-color: #667eea;
            cursor: pointer;
        }

        .policy-name {
            color: #2d3748;
            font-size: 1.2rem;
            font-weight: 600;
        }

        .policy-description {
            color: #4a5568;
            font-size: 1rem;
            line-height: 1.6;
            margin-top: 0.5rem;
        }

        .policy-actions {
            display: flex;
            gap: 1rem;
            margin-top: 1rem;
        }

        .action-btn {
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .accept-btn {
            background: linear-gradient(135deg, #48bb78, #38a169);
            color: white;
            border: none;
        }

        .accept-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(72, 187, 120, 0.3);
        }

        .decline-btn {
            background: white;
            color: #e53e3e;
            border: 1px solid #e53e3e;
        }

        .decline-btn:hover {
            background: #e53e3e;
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(229, 62, 62, 0.3);
        }

        .error-message {
            background: #fed7d7;
            color: #742a2a;
            padding: 1rem;
            border-radius: 10px;
            margin-top: 1rem;
            display: none;
        }

        @keyframes slideDown {
            from {
                transform: translateY(-100%);
                opacity: 0;
            }
            to {
                transform: translateY(0);
                opacity: 1;
            }
        }

        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        @media (max-width: 768px) {
            .header {
                padding: 1rem;
            }

            .header-content {
                flex-direction: column;
                gap: 1rem;
            }

            .user-section {
                flex-direction: column;
                gap: 1rem;
            }

            .welcome-text {
                text-align: center;
            }

            .container {
                grid-template-columns: 1fr;
                padding: 1rem;
                gap: 1.5rem;
            }

            .recommend-box {
                min-height: auto;
            }

            .policy-actions {
                flex-direction: column;
            }

            .action-btn {
                width: 100%;
                justify-content: center;
            }
        }
    </style>
</head>
<body>
    <header class="header">
        <div class="header-content">
            <a href="/home" class="logo">
                <i class="fas fa-robot"></i>
                Financial AI Hub
            </a>
            <div class="user-section">
                <span class="welcome-text">Welcome, <%= username %></span>
                <a href="/logout" class="logout-btn">
                    <i class="fas fa-sign-out-alt"></i>
                    Logout
                </a>
            </div>
        </div>
    </header>

    <div class="container">
        <div class="recommend-box">
            <h1>
                <i class="fas fa-lightbulb"></i>
                Policy Recommendations
            </h1>
            <h2>Tell us about your needs</h2>
            <textarea id="userInput" placeholder="Describe your financial situation, goals, and any specific requirements you have for a policy..."></textarea>
            <button id="getRecommendationsBtn">
                <i class="fas fa-magic"></i>
                Get AI Recommendations
            </button>
            <div id="recommendations" style="display: none;">
                <h2>Recommended Policies</h2>
                <ul id="policyList"></ul>
            </div>
            <div id="errorMessage" class="error-message"></div>
        </div>
        <div class="recommend-box">
            <iframe
                src="https://www.chatbase.co/chatbot-iframe/N7ypLB_KMEig3ZTsuFH3G"
                width="100%"
                style="height: 100%; min-height: 700px"
                frameborder="0"
            ></iframe>
        </div>
    </div>

    <script>
        // Register service worker for PWA
        if ('serviceWorker' in navigator) {
            window.addEventListener('load', () => {
                navigator.serviceWorker.register('/sw.js')
                    .then(registration => {
                        console.log('ServiceWorker registration successful');
                    })
                    .catch(err => {
                        console.log('ServiceWorker registration failed: ', err);
                    });
            });
        }

        document.getElementById('getRecommendationsBtn').addEventListener('click', async () => {
            const userInput = document.getElementById('userInput').value.trim();
            const button = document.getElementById('getRecommendationsBtn');
            const recommendations = document.getElementById('recommendations');
            const errorMessage = document.getElementById('errorMessage');
            
            if (!userInput) {
                errorMessage.textContent = 'Please describe your needs to get recommendations.';
                errorMessage.style.display = 'block';
                return;
            }
            
            // Show loading state
            button.disabled = true;
            button.innerHTML = '<div class="loading"></div> Analyzing...';
            errorMessage.style.display = 'none';
            
            try {
                const response = await fetch('/api/recommend', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ description: userInput })
                });
                
                const data = await response.json();
                
                if (response.ok) {
                    // Hide loading state
                    button.disabled = false;
                    button.innerHTML = '<i class="fas fa-magic"></i> Get AI Recommendations';
                    
                    // Display recommendations
                    recommendations.style.display = 'block';
                    const policyList = document.getElementById('policyList');
                    policyList.innerHTML = '';
                    
                    data.policies.forEach(policy => {
                        const li = document.createElement('li');
                        li.className = 'policy-item';
                        li.innerHTML = `
                            <div class="policy-header">
                                <input type="radio" name="policy" value="${policy.name}">
                                <span class="policy-name">${policy.name}</span>
                            </div>
                            <p class="policy-description">${policy.why}</p>
                            <div class="policy-actions">
                                <button class="action-btn accept-btn" onclick="acceptPolicy('${policy.name}')">
                                    <i class="fas fa-check"></i>
                                    Accept Policy
                                </button>
                                <button class="action-btn decline-btn" onclick="declinePolicy()">
                                    <i class="fas fa-times"></i>
                                    Decline
                                </button>
                            </div>
                        `;
                        policyList.appendChild(li);
                    });
                } else {
                    throw new Error(data.error || 'Failed to get recommendations');
                }
            } catch (error) {
                // Reset button state
                button.disabled = false;
                button.innerHTML = '<i class="fas fa-magic"></i> Get AI Recommendations';
                
                // Show error
                errorMessage.textContent = error.message;
                errorMessage.style.display = 'block';
            }
        });

        async function acceptPolicy(policyName) {
            try {
                const response = await fetch('/api/accept-policy', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ policy: policyName })
                });
                
                const data = await response.json();
                
                if (response.ok) {
                    window.location.href = data.redirect;
                } else {
                    throw new Error(data.error || 'Failed to accept policy');
                }
            } catch (error) {
                const errorMessage = document.getElementById('errorMessage');
                errorMessage.textContent = error.message;
                errorMessage.style.display = 'block';
            }
        }

        async function declinePolicy() {
            try {
                const response = await fetch('/api/decline-policy', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
                
                const data = await response.json();
                
                if (response.ok) {
                    // Clear recommendations
                    document.getElementById('recommendations').style.display = 'none';
                    document.getElementById('userInput').value = '';
                    
                    // Show success message
                    const errorMessage = document.getElementById('errorMessage');
                    errorMessage.textContent = data.message;
                    errorMessage.style.display = 'block';
                    errorMessage.style.background = '#c6f6d5';
                    errorMessage.style.color = '#22543d';
                } else {
                    throw new Error(data.error || 'Failed to decline policy');
                }
            } catch (error) {
                const errorMessage = document.getElementById('errorMessage');
                errorMessage.textContent = error.message;
                errorMessage.style.display = 'block';
            }
        }
    </script>
</body>
</html>
